name: 'terraform'
description: 'Install terraform, login into teraform cloud and provision the resources in Azure'
inputs:
  TF_TOKEN:
    description: 'API key from Terraform cloud to login into Terraform'
    required: true
    
  ACTION_TOKEN:
    description: 'A github-token'
    required: true
    
    
 
runs:
   
   using: composite 
   steps:
   
     

     # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1.0.1
      with:
        cli_config_credentials_token: ${{ inputs.TF_TOKEN }}
        
        
    # - name: Terraform Format
    #   id: fmt
    #   shell: bash
    #   run: terraform fmt -check
        
    - name: Terraform Init
      id: init
      shell: bash
      run: terraform init
      
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      shell: bash
      
    # Generates an execution plan for Terraform
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      shell: bash

     #returns whether a plan was successfully generated or not. 
     #This step highlights whenever a plan fails because the "Terraform Plan" step continues on error.
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
      shell: bash
      
      #On push to master, build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      shell: bash
           
  
